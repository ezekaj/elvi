name: Continuous Integration

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: TypeScript type checking
      run: npx tsc --noEmit

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production

    - name: Verify build artifacts
      run: |
        echo "Checking build output..."
        ls -la dist/
        if [ ! -f "dist/index.html" ]; then
          echo "❌ Build failed: index.html not found"
          exit 1
        fi
        if [ ! -f "dist/assets/index-"*.js ]; then
          echo "❌ Build failed: JavaScript bundle not found"
          exit 1
        fi
        echo "✅ Build verification passed"

    - name: Check bundle size
      run: |
        echo "Bundle size analysis:"
        du -sh dist/
        du -sh dist/assets/
        
        # Check if bundle is reasonable size (less than 5MB)
        BUNDLE_SIZE=$(du -s dist/ | cut -f1)
        if [ $BUNDLE_SIZE -gt 5120 ]; then
          echo "⚠️ Warning: Bundle size is larger than 5MB"
        else
          echo "✅ Bundle size is acceptable"
        fi

  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for outdated packages
      run: npm outdated || true
